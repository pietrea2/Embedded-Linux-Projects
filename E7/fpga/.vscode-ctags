!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/media/bigwhoman/lin3/uoft/Embedded_Linux/Embedded-Linux---ECE1718/E7/fpga/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
%.o	e7_template/part1/Makefile	/^%.o: %.c$/;"	t
../ADXL345.o	e7_template/part2/Makefile	/^..\/ADXL345.o: ..\/ADXL345.c$/;"	t
../ADXL345.o	e7_template/part3/Makefile	/^..\/ADXL345.o: ..\/ADXL345.c$/;"	t
../ADXL345.o	e7_template/part4/Makefile	/^..\/ADXL345.o: ..\/ADXL345.c$/;"	t
A9_ONCHIP_BASE	e7_template/include/address_map_arm.h	/^#define A9_ONCHIP_BASE /;"	d
A9_ONCHIP_SPAN	e7_template/include/address_map_arm.h	/^#define A9_ONCHIP_SPAN /;"	d
ACCELEROMETER_ADXL345_H_	e7_template/include/ADXL345.h	/^#define ACCELEROMETER_ADXL345_H_$/;"	d
ADC_BASE	e7_template/include/address_map_arm.h	/^#define ADC_BASE /;"	d
ADXL345_Calibrate	e7_template/ADXL345.c	/^void ADXL345_Calibrate() {$/;"	f	typeref:typename:void
ADXL345_IdRead	e7_template/ADXL345.c	/^void ADXL345_IdRead(uint8_t *pId) {$/;"	f	typeref:typename:void
ADXL345_Init	e7_template/ADXL345.c	/^void ADXL345_Init() {$/;"	f	typeref:typename:void
ADXL345_IsDataReady	e7_template/ADXL345.c	/^bool ADXL345_IsDataReady(void){$/;"	f	typeref:typename:bool
ADXL345_REG_BW_RATE	e7_template/include/ADXL345.h	/^#define ADXL345_REG_BW_RATE /;"	d
ADXL345_REG_DATAX0	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAX0 /;"	d
ADXL345_REG_DATAX1	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAX1 /;"	d
ADXL345_REG_DATAY0	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAY0 /;"	d
ADXL345_REG_DATAY1	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAY1 /;"	d
ADXL345_REG_DATAZ0	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAZ0 /;"	d
ADXL345_REG_DATAZ1	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATAZ1 /;"	d
ADXL345_REG_DATA_FORMAT	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DATA_FORMAT /;"	d
ADXL345_REG_DEVID	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DEVID /;"	d
ADXL345_REG_DURATION	e7_template/include/ADXL345.h	/^#define ADXL345_REG_DURATION /;"	d
ADXL345_REG_FIFO_CTL	e7_template/include/ADXL345.h	/^#define ADXL345_REG_FIFO_CTL /;"	d
ADXL345_REG_INT_ENABLE	e7_template/include/ADXL345.h	/^#define ADXL345_REG_INT_ENABLE /;"	d
ADXL345_REG_INT_MAP	e7_template/include/ADXL345.h	/^#define ADXL345_REG_INT_MAP /;"	d
ADXL345_REG_INT_SOURCE	e7_template/include/ADXL345.h	/^#define ADXL345_REG_INT_SOURCE /;"	d
ADXL345_REG_LATENCY	e7_template/include/ADXL345.h	/^#define ADXL345_REG_LATENCY /;"	d
ADXL345_REG_MULTI_READ	e7_template/ADXL345.c	/^void ADXL345_REG_MULTI_READ(uint8_t address, uint8_t values[], uint8_t len) {$/;"	f	typeref:typename:void
ADXL345_REG_OFSX	e7_template/include/ADXL345.h	/^#define ADXL345_REG_OFSX /;"	d
ADXL345_REG_OFSY	e7_template/include/ADXL345.h	/^#define ADXL345_REG_OFSY /;"	d
ADXL345_REG_OFSZ	e7_template/include/ADXL345.h	/^#define ADXL345_REG_OFSZ /;"	d
ADXL345_REG_POWER_CTL	e7_template/include/ADXL345.h	/^#define ADXL345_REG_POWER_CTL /;"	d
ADXL345_REG_READ	e7_template/ADXL345.c	/^void ADXL345_REG_READ(uint8_t address, uint8_t *value) {$/;"	f	typeref:typename:void
ADXL345_REG_TAP_AXES	e7_template/include/ADXL345.h	/^#define ADXL345_REG_TAP_AXES /;"	d
ADXL345_REG_THRESH_TAP	e7_template/include/ADXL345.h	/^#define ADXL345_REG_THRESH_TAP /;"	d
ADXL345_REG_WINDOW	e7_template/include/ADXL345.h	/^#define ADXL345_REG_WINDOW /;"	d
ADXL345_REG_WRITE	e7_template/ADXL345.c	/^void ADXL345_REG_WRITE(uint8_t address, uint8_t value) {$/;"	f	typeref:typename:void
ADXL345_WasActivityUpdated	e7_template/ADXL345.c	/^int ADXL345_WasActivityUpdated(void){$/;"	f	typeref:typename:int
ADXL345_XYZ_Read	e7_template/ADXL345.c	/^void ADXL345_XYZ_Read(int16_t szData16[3]) {$/;"	f	typeref:typename:void
AUDIO_BASE	e7_template/include/address_map_arm.h	/^#define AUDIO_BASE /;"	d
AV_CONFIG_BASE	e7_template/include/address_map_arm.h	/^#define AV_CONFIG_BASE /;"	d
BUF_SIZE	e7_template/accel_wrappers.c	/^#define BUF_SIZE /;"	d	file:
CHAR_BUF_CTRL_BASE	e7_template/include/address_map_arm.h	/^#define CHAR_BUF_CTRL_BASE /;"	d
DDR_BASE	e7_template/include/address_map_arm.h	/^#define DDR_BASE /;"	d
DDR_SPAN	e7_template/include/address_map_arm.h	/^#define DDR_SPAN /;"	d
DEV_NAME_ACCEL	e7_template/part2/accel_kernel_module.c	/^#define DEV_NAME_ACCEL /;"	d	file:
FPGA_CHAR_BASE	e7_template/include/address_map_arm.h	/^#define FPGA_CHAR_BASE /;"	d
FPGA_CHAR_SPAN	e7_template/include/address_map_arm.h	/^#define FPGA_CHAR_SPAN /;"	d
FPGA_ONCHIP_BASE	e7_template/include/address_map_arm.h	/^#define FPGA_ONCHIP_BASE /;"	d
FPGA_ONCHIP_SPAN	e7_template/include/address_map_arm.h	/^#define FPGA_ONCHIP_SPAN /;"	d
HEX3_HEX0_BASE	e7_template/include/address_map_arm.h	/^#define HEX3_HEX0_BASE /;"	d
HEX5_HEX4_BASE	e7_template/include/address_map_arm.h	/^#define HEX5_HEX4_BASE /;"	d
I2C0_BASE	e7_template/include/address_map_arm.h	/^#define I2C0_BASE	/;"	d
I2C0_CON	e7_template/include/address_map_arm.h	/^#define I2C0_CON /;"	d
I2C0_DATA_CMD	e7_template/include/address_map_arm.h	/^#define I2C0_DATA_CMD /;"	d
I2C0_ENABLE	e7_template/include/address_map_arm.h	/^#define I2C0_ENABLE /;"	d
I2C0_ENABLE_STATUS	e7_template/include/address_map_arm.h	/^#define I2C0_ENABLE_STATUS /;"	d
I2C0_FS_SCL_HCNT	e7_template/include/address_map_arm.h	/^#define I2C0_FS_SCL_HCNT /;"	d
I2C0_FS_SCL_LCNT	e7_template/include/address_map_arm.h	/^#define I2C0_FS_SCL_LCNT /;"	d
I2C0_Init	e7_template/ADXL345.c	/^void I2C0_Init() {$/;"	f	typeref:typename:void
I2C0_RXFLR	e7_template/include/address_map_arm.h	/^#define I2C0_RXFLR /;"	d
I2C0_SPAN	e7_template/include/address_map_arm.h	/^#define I2C0_SPAN	/;"	d
I2C0_TAR	e7_template/include/address_map_arm.h	/^#define I2C0_TAR /;"	d
I2C0_ptr	e7_template/part2/accel_kernel_module.c	/^volatile unsigned int * I2C0_ptr; \/\/ virtual address for I2C communication$/;"	v	typeref:typename:volatile unsigned int *
I2C0_ptr	e7_template/part3/accel_kernel_module.c	/^volatile unsigned int * I2C0_ptr; \/\/ virtual address for I2C communication$/;"	v	typeref:typename:volatile unsigned int *
I2C0_ptr	e7_template/part4/accel_kernel_module.c	/^volatile unsigned int * I2C0_ptr; \/\/ virtual address for I2C communication$/;"	v	typeref:typename:volatile unsigned int *
I2C0_virtual	e7_template/ADXL345.c	/^volatile unsigned int * I2C0_virtual;$/;"	v	typeref:typename:volatile unsigned int *
IrDA_BASE	e7_template/include/address_map_arm.h	/^#define IrDA_BASE /;"	d
JP1_BASE	e7_template/include/address_map_arm.h	/^#define JP1_BASE /;"	d
JP2_BASE	e7_template/include/address_map_arm.h	/^#define JP2_BASE /;"	d
JTAG_UART_2_BASE	e7_template/include/address_map_arm.h	/^#define JTAG_UART_2_BASE /;"	d
JTAG_UART_BASE	e7_template/include/address_map_arm.h	/^#define JTAG_UART_BASE /;"	d
KEY_BASE	e7_template/include/address_map_arm.h	/^#define KEY_BASE /;"	d
LEDR_BASE	e7_template/include/address_map_arm.h	/^#define LEDR_BASE /;"	d
LW_BRIDGE_BASE	e7_template/include/address_map_arm.h	/^#define LW_BRIDGE_BASE	/;"	d
LW_BRIDGE_SPAN	e7_template/include/address_map_arm.h	/^#define LW_BRIDGE_SPAN	/;"	d
MAX_SIZE	e7_template/part2/accel_kernel_module.c	/^#define MAX_SIZE /;"	d	file:
PIXEL_BUF_CTRL_BASE	e7_template/include/address_map_arm.h	/^#define PIXEL_BUF_CTRL_BASE /;"	d
PS2_BASE	e7_template/include/address_map_arm.h	/^#define PS2_BASE /;"	d
PS2_DUAL_BASE	e7_template/include/address_map_arm.h	/^#define PS2_DUAL_BASE /;"	d
Pinmux_Config	e7_template/ADXL345.c	/^void Pinmux_Config() {$/;"	f	typeref:typename:void
R	e7_template/part2/part2.c	/^int R;$/;"	v	typeref:typename:int
ROUNDED_DIVISION	e7_template/include/ADXL345.h	/^#define ROUNDED_DIVISION(/;"	d
SDRAM_BASE	e7_template/include/address_map_arm.h	/^#define SDRAM_BASE /;"	d
SDRAM_SPAN	e7_template/include/address_map_arm.h	/^#define SDRAM_SPAN /;"	d
SUCCESS	e7_template/part2/accel_kernel_module.c	/^#define SUCCESS /;"	d	file:
SW_BASE	e7_template/include/address_map_arm.h	/^#define SW_BASE /;"	d
SYSMGR_BASE	e7_template/include/address_map_arm.h	/^#define SYSMGR_BASE	/;"	d
SYSMGR_GENERALIO7	e7_template/include/address_map_arm.h	/^#define SYSMGR_GENERALIO7 /;"	d
SYSMGR_GENERALIO8	e7_template/include/address_map_arm.h	/^#define SYSMGR_GENERALIO8 /;"	d
SYSMGR_I2C0USEFPGA	e7_template/include/address_map_arm.h	/^#define SYSMGR_I2C0USEFPGA /;"	d
SYSMGR_SPAN	e7_template/include/address_map_arm.h	/^#define SYSMGR_SPAN	/;"	d
SYSMGR_ptr	e7_template/part2/accel_kernel_module.c	/^volatile unsigned int * SYSMGR_ptr; \/\/ virtual address for System Manager communication$/;"	v	typeref:typename:volatile unsigned int *
SYSMGR_ptr	e7_template/part3/accel_kernel_module.c	/^volatile unsigned int * SYSMGR_ptr; \/\/ virtual address for System Manager communication$/;"	v	typeref:typename:volatile unsigned int *
SYSMGR_ptr	e7_template/part4/accel_kernel_module.c	/^volatile unsigned int * SYSMGR_ptr; \/\/ virtual address for System Manager communication$/;"	v	typeref:typename:volatile unsigned int *
SYSMGR_virtual	e7_template/ADXL345.c	/^volatile unsigned int * SYSMGR_virtual;$/;"	v	typeref:typename:volatile unsigned int *
TIMER0_BASE	e7_template/include/address_map_arm.h	/^#define TIMER0_BASE /;"	d
TIMER1_BASE	e7_template/include/address_map_arm.h	/^#define TIMER1_BASE /;"	d
VIDEO_IN_BASE	e7_template/include/address_map_arm.h	/^#define VIDEO_IN_BASE /;"	d
XL345_10BIT	e7_template/include/ADXL345.h	/^#define XL345_10BIT /;"	d
XL345_ACTIVITY	e7_template/include/ADXL345.h	/^#define XL345_ACTIVITY /;"	d
XL345_ACT_INACT_CONCURRENT	e7_template/include/ADXL345.h	/^#define XL345_ACT_INACT_CONCURRENT /;"	d
XL345_ACT_INACT_SERIAL	e7_template/include/ADXL345.h	/^#define XL345_ACT_INACT_SERIAL /;"	d
XL345_AUTO_SLEEP	e7_template/include/ADXL345.h	/^#define XL345_AUTO_SLEEP /;"	d
XL345_DATAREADY	e7_template/include/ADXL345.h	/^#define XL345_DATAREADY /;"	d
XL345_DATA_JUST_LEFT	e7_template/include/ADXL345.h	/^#define XL345_DATA_JUST_LEFT /;"	d
XL345_DATA_JUST_RIGHT	e7_template/include/ADXL345.h	/^#define XL345_DATA_JUST_RIGHT /;"	d
XL345_DOUBLETAP	e7_template/include/ADXL345.h	/^#define XL345_DOUBLETAP /;"	d
XL345_FREEFALL	e7_template/include/ADXL345.h	/^#define XL345_FREEFALL /;"	d
XL345_FULL_RESOLUTION	e7_template/include/ADXL345.h	/^#define XL345_FULL_RESOLUTION /;"	d
XL345_INACTIVITY	e7_template/include/ADXL345.h	/^#define XL345_INACTIVITY /;"	d
XL345_INT_HIGH	e7_template/include/ADXL345.h	/^#define XL345_INT_HIGH /;"	d
XL345_INT_LOW	e7_template/include/ADXL345.h	/^#define XL345_INT_LOW /;"	d
XL345_MEASURE	e7_template/include/ADXL345.h	/^#define XL345_MEASURE /;"	d
XL345_OVERRUN	e7_template/include/ADXL345.h	/^#define XL345_OVERRUN /;"	d
XL345_RANGE_16G	e7_template/include/ADXL345.h	/^#define XL345_RANGE_16G /;"	d
XL345_RANGE_2G	e7_template/include/ADXL345.h	/^#define XL345_RANGE_2G /;"	d
XL345_RANGE_4G	e7_template/include/ADXL345.h	/^#define XL345_RANGE_4G /;"	d
XL345_RANGE_8G	e7_template/include/ADXL345.h	/^#define XL345_RANGE_8G /;"	d
XL345_RATE_0_10	e7_template/include/ADXL345.h	/^#define XL345_RATE_0_10 /;"	d
XL345_RATE_0_20	e7_template/include/ADXL345.h	/^#define XL345_RATE_0_20 /;"	d
XL345_RATE_0_39	e7_template/include/ADXL345.h	/^#define XL345_RATE_0_39 /;"	d
XL345_RATE_0_78	e7_template/include/ADXL345.h	/^#define XL345_RATE_0_78 /;"	d
XL345_RATE_100	e7_template/include/ADXL345.h	/^#define XL345_RATE_100 /;"	d
XL345_RATE_12_5	e7_template/include/ADXL345.h	/^#define XL345_RATE_12_5 /;"	d
XL345_RATE_1600	e7_template/include/ADXL345.h	/^#define XL345_RATE_1600 /;"	d
XL345_RATE_1_56	e7_template/include/ADXL345.h	/^#define XL345_RATE_1_56 /;"	d
XL345_RATE_200	e7_template/include/ADXL345.h	/^#define XL345_RATE_200 /;"	d
XL345_RATE_25	e7_template/include/ADXL345.h	/^#define XL345_RATE_25 /;"	d
XL345_RATE_3200	e7_template/include/ADXL345.h	/^#define XL345_RATE_3200 /;"	d
XL345_RATE_3_13	e7_template/include/ADXL345.h	/^#define XL345_RATE_3_13 /;"	d
XL345_RATE_400	e7_template/include/ADXL345.h	/^#define XL345_RATE_400 /;"	d
XL345_RATE_50	e7_template/include/ADXL345.h	/^#define XL345_RATE_50 /;"	d
XL345_RATE_6_25	e7_template/include/ADXL345.h	/^#define XL345_RATE_6_25 /;"	d
XL345_RATE_800	e7_template/include/ADXL345.h	/^#define XL345_RATE_800 /;"	d
XL345_SELFTEST	e7_template/include/ADXL345.h	/^#define XL345_SELFTEST /;"	d
XL345_SINGLETAP	e7_template/include/ADXL345.h	/^#define XL345_SINGLETAP /;"	d
XL345_SLEEP	e7_template/include/ADXL345.h	/^#define XL345_SLEEP /;"	d
XL345_SPI3WIRE	e7_template/include/ADXL345.h	/^#define XL345_SPI3WIRE /;"	d
XL345_SPI4WIRE	e7_template/include/ADXL345.h	/^#define XL345_SPI4WIRE /;"	d
XL345_STANDBY	e7_template/include/ADXL345.h	/^#define XL345_STANDBY /;"	d
XL345_WAKEUP_1HZ	e7_template/include/ADXL345.h	/^#define XL345_WAKEUP_1HZ /;"	d
XL345_WAKEUP_2HZ	e7_template/include/ADXL345.h	/^#define XL345_WAKEUP_2HZ /;"	d
XL345_WAKEUP_4HZ	e7_template/include/ADXL345.h	/^#define XL345_WAKEUP_4HZ /;"	d
XL345_WAKEUP_8HZ	e7_template/include/ADXL345.h	/^#define XL345_WAKEUP_8HZ /;"	d
XL345_WATERMARK	e7_template/include/ADXL345.h	/^#define XL345_WATERMARK /;"	d
accel	e7_template/part2/Makefile	/^accel:$/;"	t
accel	e7_template/part3/Makefile	/^accel:$/;"	t
accel	e7_template/part4/Makefile	/^accel:$/;"	t
accel_BYTES	e7_template/part2/part2.c	/^#define accel_BYTES /;"	d	file:
accel_CHAR_DEV	e7_template/accel_wrappers.c	/^#define accel_CHAR_DEV /;"	d	file:
accel_FD	e7_template/accel_wrappers.c	/^int accel_FD = -1;$/;"	v	typeref:typename:int
accel_H	e7_template/include/accel_wrappers.h	/^#define accel_H$/;"	d
accel_buffer	e7_template/accel_wrappers.c	/^char accel_buffer[BUF_SIZE];$/;"	v	typeref:typename:char[]
accel_calibrate	e7_template/accel_wrappers.c	/^void accel_calibrate( )$/;"	f	typeref:typename:void
accel_close	e7_template/accel_wrappers.c	/^void accel_close( )$/;"	f	typeref:typename:void
accel_device	e7_template/accel_wrappers.c	/^void accel_device( )$/;"	f	typeref:typename:void
accel_format	e7_template/accel_wrappers.c	/^void accel_format(int full, int range)$/;"	f	typeref:typename:void
accel_init	e7_template/accel_wrappers.c	/^void accel_init( )$/;"	f	typeref:typename:void
accel_open	e7_template/accel_wrappers.c	/^int accel_open( )$/;"	f	typeref:typename:int
accel_rate	e7_template/accel_wrappers.c	/^void accel_rate(float rate)$/;"	f	typeref:typename:void
accel_read	e7_template/accel_wrappers.c	/^int accel_read(int *ready, int *x, int *y, int *z, int *mg_per_lsb)$/;"	f	typeref:typename:int
accel_read_with_taps	e7_template/accel_wrappers.c	/^int accel_read_with_taps(int *ready, int *tap, int *dtap, int *x, int *y, int *z, int *mg_per_ls/;"	f	typeref:typename:int
all	e7_template/part2/Makefile	/^all: accel part2$/;"	t
all	e7_template/part3/Makefile	/^all: accel part3$/;"	t
all	e7_template/part4/Makefile	/^all: accel part4$/;"	t
calc_mg_per_lsb	e7_template/ADXL345.c	/^int16_t calc_mg_per_lsb(uint8_t resolution, uint8_t range) {$/;"	f	typeref:typename:int16_t
calc_offsets	e7_template/ADXL345.c	/^void calc_offsets(int16_t mg_per_lsb, int avx, int avy, int avz,$/;"	f	typeref:typename:void
chardev_accel	e7_template/part2/accel_kernel_module.c	/^static struct miscdevice chardev_accel = {$/;"	v	typeref:struct:miscdevice	file:
chardev_accel_fops	e7_template/part2/accel_kernel_module.c	/^static struct file_operations chardev_accel_fops = {$/;"	v	typeref:struct:file_operations	file:
chardev_accel_msg	e7_template/part2/accel_kernel_module.c	/^static char chardev_accel_msg[MAX_SIZE];     \/\/ the character array that can be read$/;"	v	typeref:typename:char[]	file:
chardev_accel_registered	e7_template/part2/accel_kernel_module.c	/^static int chardev_accel_registered = 0;$/;"	v	typeref:typename:int	file:
chardev_read	e7_template/part2/accel_kernel_module.c	/^static char chardev_read[MAX_SIZE];          \/\/ the character array that would be writen on$/;"	v	typeref:typename:char[]	file:
clean	e7_template/part1/Makefile	/^clean:$/;"	t
clean	e7_template/part2/Makefile	/^clean:$/;"	t
clean	e7_template/part3/Makefile	/^clean:$/;"	t
clean	e7_template/part4/Makefile	/^clean:$/;"	t
close_physical	e7_template/part1/physical.c	/^void close_physical (int fd)$/;"	f	typeref:typename:void
device_open_ACCEL	e7_template/part2/accel_kernel_module.c	/^static int device_open_ACCEL(struct inode *inode, struct file *file){$/;"	f	typeref:typename:int	file:
device_read_ACCEL	e7_template/part2/accel_kernel_module.c	/^static ssize_t device_read_ACCEL(struct file *filp, char* buffer, size_t length, loff_t *offset)/;"	f	typeref:typename:ssize_t	file:
device_release_ACCEL	e7_template/part2/accel_kernel_module.c	/^static int device_release_ACCEL(struct inode *inode, struct file *file){$/;"	f	typeref:typename:int	file:
false	e7_template/include/ADXL345.h	/^#define false /;"	d
fd	e7_template/ADXL345.c	/^int fd = -1;$/;"	v	typeref:typename:int
main	e7_template/part1/part1.c	/^int main(void){$/;"	f	typeref:typename:int
main	e7_template/part2/part2.c	/^int main(void){$/;"	f	typeref:typename:int
map_mem	e7_template/ADXL345.c	/^int map_mem() {$/;"	f	typeref:typename:int
map_physical	e7_template/part1/physical.c	/^void* map_physical(int fd, unsigned int base, unsigned int span)$/;"	f	typeref:typename:void *
mg_per_lsb	e7_template/part2/accel_kernel_module.c	/^int16_t mg_per_lsb;$/;"	v	typeref:typename:int16_t
open_physical	e7_template/part1/physical.c	/^int open_physical (int fd)$/;"	f	typeref:typename:int
part1	e7_template/part1/Makefile	/^part1: part1.o physical.o ..\/ADXL345.o$/;"	t
part2	e7_template/part2/Makefile	/^part2: part2.c ..\/accel_wrappers.c$/;"	t
part3	e7_template/part3/Makefile	/^part3: part3.c ..\/accel_wrappers.c$/;"	t
part4	e7_template/part4/Makefile	/^part4: part4.c ..\/accel_wrappers.c$/;"	t
pass_addrs	e7_template/ADXL345.c	/^void pass_addrs(unsigned int* SYSMGR_ptr_ext, unsigned int* I2C0_ptr_ext) {$/;"	f	typeref:typename:void
scale_factor	e7_template/part2/part2.c	/^int16_t x, y, z, scale_factor;$/;"	v	typeref:typename:int16_t
start_accel	e7_template/part2/accel_kernel_module.c	/^static int __init start_accel(void) {$/;"	f	typeref:typename:int __init	file:
start_accel	e7_template/part3/accel_kernel_module.c	/^static int __init start_accel(void) {$/;"	f	typeref:typename:int __init	file:
start_accel	e7_template/part4/accel_kernel_module.c	/^static int __init start_accel(void) {$/;"	f	typeref:typename:int __init	file:
stop_accel	e7_template/part2/accel_kernel_module.c	/^static void __exit stop_accel(void) {$/;"	f	typeref:typename:void __exit	file:
stop_accel	e7_template/part3/accel_kernel_module.c	/^static void __exit stop_accel(void) {$/;"	f	typeref:typename:void __exit	file:
stop_accel	e7_template/part4/accel_kernel_module.c	/^static void __exit stop_accel(void) {$/;"	f	typeref:typename:void __exit	file:
true	e7_template/include/ADXL345.h	/^#define true /;"	d
unmap_mem	e7_template/ADXL345.c	/^void unmap_mem() {$/;"	f	typeref:typename:void
unmap_physical	e7_template/part1/physical.c	/^int unmap_physical(void * virtual_base, unsigned int span)$/;"	f	typeref:typename:int
x	e7_template/part2/part2.c	/^int16_t x, y, z, scale_factor;$/;"	v	typeref:typename:int16_t
y	e7_template/part2/part2.c	/^int16_t x, y, z, scale_factor;$/;"	v	typeref:typename:int16_t
z	e7_template/part2/part2.c	/^int16_t x, y, z, scale_factor;$/;"	v	typeref:typename:int16_t
